from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from app.interface.routers.certificate_router import router as certificate_router

# Criar aplica√ß√£o FastAPI com configura√ß√£o Swagger completa
app = FastAPI(
    title="üèÜ API CAEPI - Certificados de Aprova√ß√£o",
    description="""
    ## API para consulta de Certificados de Aprova√ß√£o (CA) do CAEPI
    
    Esta API permite:
    
    * **Buscar certificados** por n√∫mero do registro CA
    * **Verificar certificados v√°lidos** - apenas certificados ativos
    * **Atualizar base de dados** - sincronizar com dados do MTPS
    
    ### Fonte dos dados
    Os dados s√£o obtidos diretamente do CAEPI (Cadastro de Aprova√ß√£o de Equipamentos de Prote√ß√£o Individual) 
    do Minist√©rio do Trabalho e Previd√™ncia Social (MTPS).
    
    ### Como usar
    1. Use `/certificates/{registro_ca}` para buscar qualquer certificado
    2. Use `/certificates/update-database` para atualizar a base de dados
    """,
    version="1.0.0",
    contact={
        "name": "Suporte T√©cnico",
        "email": "suporte@example.com",
    },
    license_info={
        "name": "MIT License",
        "url": "https://opensource.org/licenses/MIT",
    },
    openapi_tags=[
        {
            "name": "Certificados",
            "description": "Opera√ß√µes relacionadas aos certificados CA",
        },
        {
            "name": "Sistema",
            "description": "Opera√ß√µes de sistema e monitoramento",
        }
    ]
)

# Configurar CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # Em produ√ß√£o, especifique os dom√≠nios permitidos
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Incluir routers
app.include_router(certificate_router)

# Health check
@app.get(
    "/health",
    tags=["Sistema"],
    summary="Verificar sa√∫de da API",
    description="Endpoint para verificar se a API est√° funcionando corretamente"
)
async def health_check():
    """
    Verifica√ß√£o de sa√∫de da API.
    
    Retorna o status atual da aplica√ß√£o.
    """
    return {
        "status": "OK", 
        "message": "API funcionando corretamente",
        "version": "1.0.0"
    }

@app.get(
    "/",
    tags=["Sistema"],
    summary="Informa√ß√µes da API",
    description="P√°gina inicial com informa√ß√µes b√°sicas da API"
)
async def root():
    """
    Informa√ß√µes b√°sicas da API.
    """
    return {
        "title": "API CAEPI - Certificados de Aprova√ß√£o",
        "version": "1.0.0",
        "description": "API para consulta de Certificados de Aprova√ß√£o do CAEPI",
        "docs": "/docs",
        "redoc": "/redoc"
    }

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(
        "main:app", 
        host="0.0.0.0", 
        port=8000,
        reload=True,  # Para desenvolvimento
        log_level="info"
    )